Analyze this image and identify all visible products in ORDER OF VISUAL IMPORTANCE. Pay special attention to the gender and context of people wearing clothing items.

CRITICAL PRIORITY ORDERING (return products in this exact order):
1. PRIMARY FOCUS: Products that are centrally located, in sharp focus, well-lit, and clearly the main subject
2. SECONDARY FOCUS: Products that are prominent but slightly off-center or in mid-ground
3. BACKGROUND/PERIPHERAL: Products that are in background, partially obscured, or less prominent

The JSON array order MUST reflect visual importance - primary products first, then secondary, then background.
The first products in your JSON array should be the most visually prominent and important items.

CRITICAL: Each distinct clothing item or accessory must be identified as a SEPARATE product. However, DO NOT split single items with multiple colors/patterns. For example:
- A blazer and shirt worn together = TWO separate products
- A suit jacket and pants = TWO separate products  
- A dress and shoes = TWO separate products
- A watch and bracelet = TWO separate products
- BUT: A single tank top with green accents = ONE product (not two)
- BUT: A single striped shirt = ONE product (not multiple)
- BUT: A single color-blocked dress = ONE product (not multiple)

For each product, provide:
1. Product name/description (MUST include color if visible, max 25 characters)
2. Category (clothing, electronics, furniture, accessories, etc.)
3. Brand (if visible/identifiable)
4. Primary color (the main/dominant color of the item)
5. Secondary colors (if applicable)
6. Key identifying features (style, material, pattern, etc.)
7. Target gender/demographic (men, women, unisex, boy, girl)
8. Optimized search terms for finding this product online

Format your response as a JSON array of objects with this structure:
{
    "products": [
        {
            "name": "product name with color",
            "category": "category",
            "brand": "brand name or unknown",
            "primaryColor": "main color",
            "secondaryColors": ["color1", "color2"],
            "features": ["style", "material", "pattern"],
            "targetGender": "men" | "women" | "unisex" | "boy" | "girl",
            "searchTerms": "optimized search terms for finding this product"
        }
    ]
}

Important guidelines:
- NAME LENGTH: Product names must be 25 characters or less, do not include gender
- GROUPING: Contextually related items must appear consecutively in the output array (e.g., items worn by same person, on same desk, or in same set)
- SEPARATE ITEMS: Identify each distinct piece of clothing/accessory as its own product entry
- SINGLE ITEMS WITH MULTIPLE COLORS: Treat multi-colored single items as ONE product (include all visible colors)
- COLOR IS CRITICAL: Always identify and include the primary color of items
- Be specific with colors (e.g., "navy blue" not just "blue", "forest green" not just "green")
- Include ALL visible colors in the product name and search terms for multi-colored items
- For clothing: If you see a man wearing clothing, identify it as "men's" clothing
- For clothing: If you see a woman wearing clothing, identify it as "women's" clothing
- For clothing: If you see a child wearing clothing, identify it as "children's" clothing
- Only mark as "unisex" if the item is truly gender-neutral
- Search terms should follow this pattern: "[gender] [colors] [product type] [material/style]"
- Examples: "men's navy blue cotton shorts", "women's black tank top with green accents", "red wireless headphones"
- DO NOT combine multiple distinct clothing items into one product description
- DO NOT split single items with multiple colors into separate products

Focus on:
- Clothing and accessories (shirts, shoes, jewelry, bags, etc.)
- Electronics (phones, laptops, headphones, etc.)
- Furniture and home decor
- Visible branded items
- Items that are clearly the focus of the scene

Ignore:
- Generic backgrounds
- Text/UI elements
- Very small or unclear items
- Items that are clearly not purchaseable products

Provide only the JSON response, no additional text.
